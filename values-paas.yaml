# Init containers to add to the Velero deployment's pod spec. At least one plugin provider image is required.
# If the value is a string then it is evaluated as a template.
initContainers:
  - name: velero-plugin-for-csi
    image: velero/velero-plugin-for-csi:v0.4.2
    imagePullPolicy: IfNotPresent
    volumeMounts:
      - mountPath: /target
        name: plugins
  - name: velero-plugin-for-aws
    image: velero/velero-plugin-for-aws:v1.6.1
    imagePullPolicy: IfNotPresent
    volumeMounts:
      - mountPath: /target
        name: plugins

##
## End of deployment-related settings.
##


##
## Parameters for the `default` BackupStorageLocation and VolumeSnapshotLocation,
## and additional server settings.
##
configuration:
  # Cloud provider being used (e.g. aws, azure, gcp).
  provider: "aws"

  # Parameters for the `default` BackupStorageLocation. See
  # https://velero.io/docs/v1.6/api-types/backupstoragelocation/
  backupStorageLocation:
    # provider is the name for the backup storage location provider. If omitted
    # `configuration.provider` will be used instead.
    provider: "aws"
    # bucket is the name of the bucket to store backups in. Required.
    bucket: ""
    config:
      region: "us-geo"
      s3ForcePathStyle: true
      # like https://example.com
      s3Url: ""

  # Parameters for the `default` VolumeSnapshotLocation. See
  # https://velero.io/docs/v1.6/api-types/volumesnapshotlocation/
  volumeSnapshotLocation:
    # name is the name of the volume snapshot location where snapshots are being taken. Required.
    name: default
    # provider is the name for the volume snapshot provider. If omitted
    # `configuration.provider` will be used instead.
    provider: "aws"
    # Additional provider-specific configuration. See link above
    # for details of required/optional fields for your provider.
    config:
      region: "us-geo"
      s3ForcePathStyle: true
      # like https://example.com
      s3Url: ""

  # These are server-level settings passed as CLI flags to the `velero server` command. Velero
  # uses default values if they're not passed in, so they only need to be explicitly specified
  # here if using a non-default value. The `velero server` default values are shown in the
  # comments below.
  # --------------------

  # Comma separated list of velero feature flags. default: empty
  features: EnableCSI

##
## End of backup/snapshot location settings.
##


##
## Settings for additional Velero resources.
##

# Info about the secret to be used by the Velero deployment, which
# should contain credentials for the cloud provider IAM account you've
# set up for Velero.
credentials:
  # Whether a secret should be used. Set to false if, for examples:
  # - using kube2iam or kiam to provide AWS IAM credentials instead of providing the key file. (AWS only)
  # - using workload identity instead of providing the key file. (GCP only)
  useSecret: true
  # Name of the secret to create if `useSecret` is true and `existingSecret` is empty
  name: velero-credentials
  # Data to be stored in the Velero secret, if `useSecret` is true and `existingSecret` is empty.
  # As of the current Velero release, Velero only uses one secret key/value at a time.
  # The key must be named `cloud`, and the value corresponds to the entire content of your IAM credentials file.
  # Note that the format will be different for different providers, please check their documentation.
  # Here is a list of documentation for plugins maintained by the Velero team:
  # [AWS] https://github.com/vmware-tanzu/velero-plugin-for-aws/blob/main/README.md
  # [GCP] https://github.com/vmware-tanzu/velero-plugin-for-gcp/blob/main/README.md
  # [Azure] https://github.com/vmware-tanzu/velero-plugin-for-microsoft-azure/blob/main/README.md
  secretContents:
    cloud: |
      [default]
       aws_access_key_id=
       aws_secret_access_key=

# Whether to deploy the node-agent daemonset.
deployNodeAgent: true

# Backup schedules to create.
# Eg:
# schedules:
#   mybackup:
#     disabled: false
#     labels:
#       myenv: foo
#     annotations:
#       myenv: foo
#     schedule: "0 0 * * *"
#     useOwnerReferencesInBackup: false
#     template:
#       ttl: "240h"
#       includedNamespaces:
#       - foo
schedules:
  daily-backup:
    disabled: false
    schedule: "0 0 * * *"
    useOwnerReferencesInBackup: false
    template:
      ttl: "48h"
      excludedNamespaces:
      - default
      - cert-manager
      - elk-infra
      - kube-node-lease
      - kube-public
      - kube-system
      - openshift
      - openshift-apiserver
      - openshift-apiserver-operator
      - openshift-authentication
      - openshift-authentication-operator
      - openshift-cloud-controller-manager
      - openshift-cloud-controller-manager-operator
      - openshift-cloud-credential-operator
      - openshift-cloud-network-config-controller
      - openshift-cluster-csi-drivers
      - openshift-cluster-machine-approver
      - openshift-cluster-node-tuning-operator
      - openshift-cluster-samples-operator
      - openshift-cluster-storage-operator
      - openshift-cluster-version
      - openshift-config
      - openshift-config-managed
      - openshift-config-operator
      - openshift-console
      - openshift-console-operator
      - openshift-console-user-settings
      - openshift-controller-manager
      - openshift-controller-manager-operator
      - openshift-dns
      - openshift-dns-operator
      - openshift-etcd
      - openshift-etcd-operator
      - openshift-host-network
      - openshift-image-registry
      - openshift-infra
      - openshift-ingress
      - openshift-ingress-canary
      - openshift-ingress-operator
      - openshift-insights
      - openshift-kni-infra
      - openshift-kube-apiserver
      - openshift-kube-apiserver-operator
      - openshift-kube-controller-manager
      - openshift-kube-controller-manager-operator
      - openshift-kube-scheduler
      - openshift-kube-scheduler-operator
      - openshift-kube-storage-version-migrator
      - openshift-kube-storage-version-migrator-operator
      - openshift-logging
      - openshift-machine-api
      - openshift-machine-config-operator
      - openshift-marketplace
      - openshift-migration
      - openshift-monitoring
      - openshift-multus
      - openshift-network-diagnostics
      - openshift-network-operator
      - openshift-node
      - openshift-nutanix-infra
      - openshift-oauth-apiserver
      - openshift-openstack-infra
      - openshift-operator-lifecycle-manager
      - openshift-operators
      - openshift-operators-redhat
      - openshift-ovirt-infra
      - openshift-ovn-kubernetes
      - openshift-service-ca
      - openshift-service-ca-operator
      - openshift-user-workload-monitoring
      - openshift-vsphere-infra
      snapshotVolumes: true

##
## End of additional Velero resource settings.
##